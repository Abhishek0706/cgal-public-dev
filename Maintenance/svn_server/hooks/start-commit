#!/bin/sh

# START-COMMIT HOOK
#
# The start-commit hook is invoked before a Subversion txn is created
# in the process of doing a commit.  Subversion runs this hook
# by invoking a program (script, executable, binary, etc.) named
# 'start-commit' (for which this file is a template)
# with the following ordered arguments:
#
#   [1] REPOS-PATH   (the path to this repository)
#   [2] USER         (the authenticated user attempting to commit)
#
# The default working directory for the invocation is undefined, so
# the program should set one explicitly if it cares.
#
# If the hook program exits with success, the commit continues; but
# if it exits with failure (non-zero), the commit is stopped before
# a Subversion txn is created, and STDERR is returned to the client.
#
# On a Unix system, the normal procedure is to have 'start-commit'
# invoke other programs to do the real work, though it may do the
# work itself too.
#
# Note that 'start-commit' must be executable by the user(s) who will
# invoke it (typically the user httpd runs as), and that user must
# have filesystem-level permission to access the repository.
#
# On a Windows system, you should name the hook program
# 'start-commit.bat' or 'start-commit.exe',
# but the basic idea is the same.
# 
# The hook program typically does not inherit the environment of
# its parent process.  For example, a common problem is for the
# PATH environment variable to not be set to its usual value, so
# that subprograms fail to launch unless invoked via absolute path.
# If you're having unexpected problems with a hook program, the
# culprit may be unusual (or missing) environment variables.
# 
# Here is an example hook script, for a Unix /bin/sh interpreter.# For more examples and pre-written hooks, see those in
# the Subversion repository at
# http://svn.collab.net/repos/svn/trunk/tools/hook-scripts/ and
# http://svn.collab.net/repos/svn/trunk/contrib/hook-scripts/


REPOS="$1"
USER="$2"
CAPABILITIES="$3"

SVNLOOK=/usr/bin/svnlook

#if [ "$USER" = "lrineau" ]; then
#    exec >&2
#    if ! echo "$CAPABILITIES" | grep -q mergeinfo; then
#        echo "*"
#        echo "* ERROR: Your version of Subversion does not handle mergeinfo correctly."
#        echo "* Your Subversion client is too old. svn>=1.5 is required to commit in CGAL repository."
#        echo "* Please install a newer one from:"
#        echo "*       http://tortoisesvn.tigris.org/ for Windows"
#        echo "*    or 
#        echo "*   -- Laurent Rineau, 2010/03/12"
#        echo "*"
#        exit 1
#    fi
#fi

if "$SVNLOOK" cat "$REPOS" branches/next/Maintenance/git/authors-file.txt | grep -qE "^$USER =" >&2; then
    echo >/dev/null
    # Commit will be accepted
else
    echo "---------------------------------------------------------------------------" >&2
    echo "CGAL commit rejected!" >&2
    echo "" >&2
    echo "Your username $USER cannot be found in the following file:" >&2
    echo "   branches/next/Maintenance/git/authors-file.txt" >&2
    echo "For that reason your commit has been rejected." >&2
    echo "Ask another CGAL developer to fill the file for you (in the 'next' branch)." >&2
    echo "" >&2
    echo "  (check added by Laurent Rineau at the Tel Aviv CGAL developers meeting," >&2 
    echo "      22 May 2012)" >&2
    echo "---------------------------------------------------------------------------" >&2

    exit 1
fi

#/home/groups/cgal/hooks/check-capabilities.pl "$REPOS" "$USER" "$CAPABILITIES"

# All checks passed, so allow the commit.
exit 0
