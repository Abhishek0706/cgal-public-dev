/*!
\defgroup PkgDataClassification Point Set Shape Detection Reference

\defgroup PkgDataClassificationConcepts Concepts
\ingroup PkgDataClassification

\defgroup PkgDataClassificationShapes Shapes
\ingroup PkgDataClassification

\addtogroup PkgDataClassification

\cgalPkgDescriptionBegin{Data Classification, PkgDataClassificationSummary}
\cgalPkgPicture{data_classif.png}

\cgalPkgSummaryBegin
\cgalPkgAuthors{Simon Giraudot}
\cgalPkgDesc{This component implements an algorithm that classifies a point cloud into a user-defined set of classes (such as ground, vegetation, buildings, etc.). A flexible API is provided so that the user can compute its own local attributes on the point cloud and define its own classes based on these attributes.}
\cgalPkgManuals{Chapter_Data_Classification, PkgDataClassification}
\cgalPkgSummaryEnd

\cgalPkgShortInfoBegin
\cgalPkgSince{4.9}
\cgalPkgBib{cgal:ovja-pssd}
\cgalPkgDependsOn{\ref PkgDEPENDENCY}
\cgalPkgLicense{\ref licensesGPL "GPL"}
\cgalPkgDemo{Operations on Polyhedra,polyhedron_3.zip}
\cgalPkgShortInfoEnd

\cgalPkgDescriptionEnd

\cgalClassifedRefPages

## Classification ##
- `CGAL::Point_set_classification<Kernel, RandomAccessIterator, PointMap>`

## Data Structures ##

- `CGAL::Data_classification::Helper<Kernel, RandomAccessIterator, PointMap, DiagonalizeTraits>`
- `CGAL::Data_classification::Neighborhood<Kernel, RandomAccessIterator, PointMap>`
- `CGAL::Data_classification::Local_eigen_analysis<Kernel, RandomAccessIterator, PointMap, DiagonalizeTraits>`
- `CGAL::Data_classification::Planimetric_grid<Kernel, RandomAccessIterator, PointMap>`

## Classification Type ##

- `CGAL::Data_classification::Type`
- `CGAL::Data_classification::Type_handle`

## Attribute ##

- `CGAL::Data_classification::Attribute`
- `CGAL::Data_classification::Attribute_handle`

## Predefined Attributes ##

- `CGAL::Data_classification::Attribute_anisotropy<Kernel, RandomAccessIterator, PointMap, DiagonalizeTraits>`
- `CGAL::Data_classification::Attribute_distance_to_plane<Kernel, RandomAccessIterator, PointMap, DiagonalizeTraits>`
- `CGAL::Data_classification::Attribute_echo_scatter<Kernel, RandomAccessIterator, PointMap, EchoMap>`
- `CGAL::Data_classification::Attribute_eigentropy<Kernel, RandomAccessIterator, PointMap, DiagonalizeTraits>`
- `CGAL::Data_classification::Attribute_elevation<Kernel, RandomAccessIterator, PointMap>`
- `CGAL::Data_classification::Attribute_hsv<Kernel, RandomAccessIterator, ColorMap>`
- `CGAL::Data_classification::Attribute_linearity<Kernel, RandomAccessIterator, PointMap, DiagonalizeTraits>`
- `CGAL::Data_classification::Attribute_omnivariance<Kernel, RandomAccessIterator, PointMap, DiagonalizeTraits>`
- `CGAL::Data_classification::Attribute_planarity<Kernel, RandomAccessIterator, PointMap, DiagonalizeTraits>`
- `CGAL::Data_classification::Attribute_sphericity<Kernel, RandomAccessIterator, PointMap, DiagonalizeTraits>`
- `CGAL::Data_classification::Attribute_sum_eigenvalues<Kernel, RandomAccessIterator, PointMap, DiagonalizeTraits>`
- `CGAL::Data_classification::Attribute_surface_variation<Kernel, RandomAccessIterator, PointMap, DiagonalizeTraits>`
- `CGAL::Data_classification::Attribute_vertical_dispersion<Kernel, RandomAccessIterator, PointMap>`
- `CGAL::Data_classification::Attribute_verticality<Kernel, RandomAccessIterator, PointMap, DiagonalizeTraits>`


*/
