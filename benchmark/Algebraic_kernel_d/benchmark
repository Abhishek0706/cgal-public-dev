#! /bin/bash
make Algebraic_kernel_d_1

plot_instructions="set terminal postscript portrait\n" 
plot_instructions+="set output 'bench_results.ps'\n"
plot_instructions+="plot "

min_bits=10
max_bits=90
min_quadrics=40
max_quadrics=40

for rep_class in Algebraic_real_rep Algebraic_real_rep_bfi;
#for rep_class in Algebraic_real_rep_bfi;
do	
	for quadrics_count in `seq $min_quadrics 10 $max_quadrics`;
	do
		resultfile='results_'$rep_class'_00'$quadrics_count'_quadrics.bm'
		if [[ -r $resultfile ]]; then
			rm $resultfile
		fi
		
		echo "#1 number_of_polys" >> $resultfile
		echo "#2 bits" >> $resultfile
		echo "#3 number_of_real_roots_found" >> $resultfile
		echo "#4 degree_of_polynomials" >> $resultfile
		echo "#5 solve_time" >> $resultfile
	    echo "#6 sort_time" >> $resultfile
		echo "#7 to_double_time" >> $resultfile
		echo "#8 total_time" >> $resultfile
		echo "" >> $resultfile
			
		for bits_count in `seq $min_bits 10 $max_bits`;
		do
			./Algebraic_kernel_d_1 EXT $rep_class Descartes \
				'data/resultants_from_00'$quadrics_count'_quadrics_with_00'$bits_count'_bits.nix' 1 \
				  2>> $resultfile
		done			

		plot_instructions+="'"$resultfile"' with lines"
		if [ $quadrics_count = $max_quadrics ] && [ $rep_class == "Algebraic_real_rep_bfi" ]; then
			plot_instructions+="\n"
		else
			plot_instructions+=", "
		fi

	done

done

#Plot the results
#echo -e $plot_instructions
#echo -e $plot_instructions | gnuplot

